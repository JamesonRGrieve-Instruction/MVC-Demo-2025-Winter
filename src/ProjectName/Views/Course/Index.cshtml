@model IEnumerable<ProjectName.Models.Course>
@using System.Linq.Expressions
@{
    ViewData["Title"] = "Index";

    // Use expressions, not compiled functions
    Expression<Func<ProjectName.Models.Course, object>>[] fieldSelectors = {
x => x.CourseCode,
x => x.Name,
x => x.Description
};
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            @foreach (var selector in fieldSelectors)
            {
                <th>
                    @Html.DisplayNameFor(selector)
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @foreach (var selector in fieldSelectors)
                {
                    <td>
                        @Html.DisplayFor(model => selector.Compile().Invoke(item))
                    </td>
                }
                <td>
                    <a asp-action="Edit" asp-route-code="@item.CourseCode">Edit</a> |
                    <a asp-action="Details" asp-route-code="@item.CourseCode">Details</a> |
                    <a asp-action="Delete" asp-route-code="@item.CourseCode">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>